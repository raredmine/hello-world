#!/usr/bin/perl -w
use strict;
use List::Util qw(shuffle);
use 5.010;

my (@_2comb, @_3comb, @_4comb, @_5comb, @_6comb, @lc, @uc, @num, @sym, @amb, @sim, @sum, @pass);
$_ = 'X' for my ($uc_lc, $uc_uc, $uc_num, $uc_sym, $uc_amb);

@lc = ('a'..'z');
@uc = ('A'..'Z');
@num = (0..9);
@sym = ('!','@','#','$','%','^','&','*','_','+','-','?');
@amb = ('{','}','[',']','(',')','/','\\','\'','"','~','`',',',';',':','.','<','>');
@sim = ('i','l','L','o',0,'O');

#$lc[rand(26)];

#my @pass=shuffle(1..10);
#say @pass;

while(1) {
say "Select character by entering name or 'all'. Deselect\ncharacter by prepending a '-', e.g. -lower*.\nSelected character are labeled '[X]'.";
say "[$uc_lc] lower case\t[$uc_uc] upper case\t[$uc_amb] ambigous character\n[$uc_sym] symbolic\t[$uc_num] number"; 
print "Select Character(s)? or ( 'quit' or 'done') ";
my $opt = <STDIN>;
if ($opt =~ /-lower\*( case)?/) {
	$uc_lc=' ';
}elsif ($opt =~ /-upper\*( case)?/){
	$uc_uc=' ';
}elsif ($opt =~ /-ambigous*( character)?/){
	$uc_amb=' ';
}elsif ($opt =~ /-symbolic/){
	$uc_sym=' ';
}elsif ($opt =~ /-number/){
	$uc_num=' ';
}elsif ($opt =~/\ball\b/){
	$_ = 'X' for ($uc_lc, $uc_uc, $uc_amb, $uc_sym, $uc_num);	
}elsif ($opt =~/quit|exit/){
	exit 1;
}elsif ($opt =~/done/){
	push @sum, @lc, push @pass, $lc[rand(26)] if $uc_lc eq 'X';
	push @sum, @uc, push @pass, $uc[rand(26)] if $uc_uc eq 'X';
	push @sum, @num, push @pass, $num[rand(10)] if $uc_num eq 'X';
	push @sum, @amb, push @pass, $amb[rand(18)] if $uc_amb eq 'X';
	push @sum, @sym, push @pass, $sym[rand(12)] if $uc_sym eq 'X';
	#last;

print "Type the size of your password, minimum of 8: ";
chomp(my $opt_num = <STDIN>);

if ($opt_num =~ /\d+/) {
	if ($opt_num < 8) {
        	say "Please type 8 or greater: ";
		undef @sum;
		undef @pass;
	}else {

		foreach (2..($opt_num-$#pass)) {
        		push @pass, $sum[rand($#sum)];
		}
	say "\nPASSWORD:\t", shuffle(@pass), "\n";

	
	undef @pass;

	undef @sum;
	}
		}
	}

}
